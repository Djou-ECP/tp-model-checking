MODULE main
VAR
    state : {ab, nab, anb, nanb};
DEFINE
    a := state = ab | state = anb;
    b := state = ab | state = nab;
ASSIGN
    init(state) := anb;
    next(state) := case
        a & b : anb;
        !a & b : nanb;
        !a & !b : nanb;
        a & !b : {ab, nab, nanb};
    esac;

LTLSPEC G(a) 
LTLSPEC a U b
LTLSPEC a U X( a & !b)
LTLSPEC X( !b &  G(!a | !b))
LTLSPEC X(a & b) & F(!a & !b)
SPEC EF(EG(a))
SPEC EF(EG(b))
LTLSPEC F(G(a) | G(b))